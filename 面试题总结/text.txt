浏览器的渲染机制一般分为一下几个步骤：
  1.处理HTML并构建DOM树。
  2.处理CSS构建CSSOM树。
  3.将DOM与CSSOM合并成一个渲染树。
  4.根据渲染树来布局，计算每个节点的位置。
  5.调用GPU绘制，合成图层，显示在屏幕上。

重绘(Repaint)和回流(Reflow)
  重绘：当节点需要更改外观而不会影响布局，比如改变color就称为重绘。
  回流：布局或几何属性需要改变就称为回流。
  注：回流必定会重绘，重绘不一定会引发回流。回流的成本比重绘大很多。

减少重绘和回流：
  1.使用translate替代top。
  2.使用visibility替换display:none。
  3.把DOM离线后修改，比如：先把DOM给display:none（有一次回流），然后你修改n次然后再把它显示出来。
  4.不要把DOM节点的属性值放在一个循环里当成循环里的变量。
  5.不要使用table布局，可能很小的一个改动就会造成整个table重新布局。
  6.动画实现速度的选择，动画速度越快，回流次数越多。
  *7.CSS选择符从右往左匹配查找，避免DOM深度过深。
  8.将频繁运行的动画变成图层，图层能够阻止该节点回流影响别的元素。