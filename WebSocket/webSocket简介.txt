/*
  WebSocket是HTML5开始提供的一种在单个TCP连接上进行"全双工通讯"的协议。
  ---------------------------------------------------------------------------------------------
  WebSocket使得客户端和服务器之间的数据交换变得更加简单，
  允许服务端主动向客户端推送数据。在WebSocketAPI中，
  浏览器和服务器只需要完成一次握手，两者之间就直接可以创建持久性的连接，
  并进行双向数据传输。
  ---------------------------------------------------------------------------------------------
  现在，很多网站为了实现推送技术，所用的技术都是Ajax轮询。轮询是在特定的的时间间隔，
  由浏览器对服务器发出HTTP请求，然后由服务器返回最新的数据给客户端的浏览器。
  这种传统的模式带来很明显的缺点，即浏览器需要不断的向服务器发出请求，然而HTTP请求可能包含较长的头部，
  其中真正有效的数据可能只是很小的一部分，显然这样会浪费很多的带宽等资源。

  HTML5 定义的 WebSocket 协议，能更好的节省服务器资源和带宽，并且能够更实时地进行通讯。
  ----------------------------------------------------------------------------------------------
  WebSocket的优点：ws协议相比于HTTP协议，它具有以下优势：
    1.全双工通信能力：支持客户端和服务端主动给对方发送消息。
    2.高实时性：Ajax轮询只是不断的请求，而服务端检测到更新主动推送才是真正意义上的实时。
    3.高效节能：HTTP协议请求一般都会有较长的头部，而需要实时更新的数据可能就一点点，
               这就造成了带宽很多不必要的消耗。而ws协议控制数据包的头部比较小，一般只有十个字节左右。
    4.支持扩展：ws协议定义了扩展，用户可以扩展协议，或实现自定义子协议。
    5.没有跨域限制：不是xhr请求，没有同源策略的限制。

    (1)建立在 TCP 协议之上，服务器端的实现比较容易。
    (2)与 HTTP 协议有着良好的兼容性。默认端口也是80和443，
       并且握手阶段采用 HTTP 协议，因此握手时不容易屏蔽，能通过各种 HTTP 代理服务器。
    (3)数据格式比较轻量，性能开销小，通信高效。
    (4)可以发送文本，也可以发送二进制数据。
    (5)没有同源限制，客户端可以与任意服务器通信。
    (6)协议标识符是ws（如果加密，则为wss），服务器网址就是 URL。
  ------------------------------------------------------------------------------------------------
*/