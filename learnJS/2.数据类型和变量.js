/* 
  == 和 === 的区别
  ==：它会转换类型在进行比较，很多时候它会得到非常诡异的结果。
  ===：它不会转换数据类型，如果类型不一致就返回false，如果一致在比较。
  由于js这个设计的缺陷在比较的时候尽量用 === 。
  另一个例外是NaN：这个特殊的值与其他任何值都不相等，包括它自己。
  判断NaN的唯一方法是通过isNaN这个函数。
*/
console.log("NaN === NaN", NaN === NaN)

console.log("isNaN(NaN)", isNaN(NaN))


/* 
  浮点数的相等比较。
  因为计算机无法精确表示无限循环小数，故只能比较它们的差值是否小于某个阈值。 
*/
console.log("1/3 === (1 - 2/3)", 1/3 === (1 - 2/3))

console.log("Math.abs(1/3 - (1 - 2/3)) < 0.00001", Math.abs(1/3 - (1 - 2/3)) < 0.00001)

/* 
  null和undefined
  null表示'空'的值，它和0以及空字符串''不同，0表示否认是一个数值，''表示的是一个长度为0的空字符串。
  大多数情况下我们用null，只有在判断函数参数是否传递下才用undefined。
*/
console.log("null === 0", null === 0)  // false

console.log("null === ''", null === '')  // false